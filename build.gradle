//apply from: 'tasks.gradle'
//processResources.dependsOn copyConfiguration

loadConfiguration()

def loadConfiguration() {
	def environment = property('env') ? env : 'dev'
	setProperty 'env', environment
	println("Copying to: " + environment)
	copy {
		from "src/main/environment/$environment"
		into "src/main/resources"
		include "**/*"
	}
}

buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

group = 'com.iot.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

wrapper {
	distributionType = Wrapper.DistributionType.ALL
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	//compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("com.googlecode.json-simple:json-simple:1.1.1")
	
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
  
	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')
}
